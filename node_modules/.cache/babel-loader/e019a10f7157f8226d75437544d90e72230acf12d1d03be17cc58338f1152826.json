{"ast":null,"code":"var _jsxFileName = \"/home/genox/Desktop/NameInput/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    ValueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    ValueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.includes('@'));\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  ;\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    resetNameInput();\n    resetEmailInput();\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n    console.log(enteredName);\n    console.log(enteredEmail);\n  };\n  const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangedHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailChangedHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"ydK8Ol1nzxXYysgne64tBBjxdW4=\", false, function () {\n  return [useInput, useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useInput","SimpleInput","props","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","ValueChangeHandler","nameChangedHandler","inputBlurHandler","nameBlurHandler","reset","resetNameInput","trim","enteredEmail","enteredEmailIsValid","emailInputHasError","emailChangedHandler","emailBlurHandler","resetEmailInput","includes","formIsValid","formSubmissionHandler","event","preventDefault","console","log","nameInputClasses","emailInputClasses"],"sources":["/home/genox/Desktop/NameInput/src/components/SimpleInput.js"],"sourcesContent":["import useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n\n  const { \n    value:  enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError, \n    ValueChangeHandler: nameChangedHandler, \n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== '');\n\n  const { \n    value:  enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError, \n    ValueChangeHandler: emailChangedHandler, \n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.includes('@'));\n       \n  let formIsValid = false;\n\n    if(enteredNameIsValid && enteredEmailIsValid) {\n       formIsValid = true;\n    };\n\n  const formSubmissionHandler = (event) => {\n       event.preventDefault();\n\n       resetNameInput();\n\n       resetEmailInput();\n\n       if(!enteredNameIsValid && !enteredEmailIsValid) {\n           return;\n       }\n\n\n       console.log(enteredName);\n       console.log(enteredEmail);\n  };\n\n  const nameInputClasses = nameInputHasError\n  ? 'form-control invalid'\n  : 'form-control';\n\n  const emailInputClasses = emailInputHasError\n  ? 'form-control invalid'\n  : 'form-control';\n\n  return (\n\n    <form onSubmit={formSubmissionHandler}>\n\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n        type='text' \n        id='name' \n        onChange={nameChangedHandler} \n        onBlur={nameBlurHandler}\n        value={enteredName}\n        />\n        {nameInputHasError && <p className=\"error-text\">Name must not be empty</p>}\n      </div>\n\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your email</label>\n        <input \n        type='text' \n        id='email' \n        onChange={emailChangedHandler} \n        onBlur={emailBlurHandler}\n        value={enteredEmail}\n        />\n        {emailInputHasError && <p className=\"error-text\">Email must not be empty</p>}\n      </div>\n\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n\n\n  };\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,oBAAoB;AAAC;AAE1C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAE7B,MAAM;IACJC,KAAK,EAAGC,WAAW;IACnBC,OAAO,EAAEC,kBAAkB;IAC3BC,QAAQ,EAAEC,iBAAiB;IAC3BC,kBAAkB,EAAEC,kBAAkB;IACtCC,gBAAgB,EAAEC,eAAe;IACjCC,KAAK,EAAEC;EACT,CAAC,GAAGd,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACY,IAAI,EAAE,KAAK,EAAE,CAAC;EAE1C,MAAM;IACJZ,KAAK,EAAGa,YAAY;IACpBX,OAAO,EAAEY,mBAAmB;IAC5BV,QAAQ,EAAEW,kBAAkB;IAC5BT,kBAAkB,EAAEU,mBAAmB;IACvCR,gBAAgB,EAAES,gBAAgB;IAClCP,KAAK,EAAEQ;EACT,CAAC,GAAGrB,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACmB,QAAQ,CAAC,GAAG,CAAC,CAAC;EAE1C,IAAIC,WAAW,GAAG,KAAK;EAErB,IAAGjB,kBAAkB,IAAIW,mBAAmB,EAAE;IAC3CM,WAAW,GAAG,IAAI;EACrB;EAAC;EAEH,MAAMC,qBAAqB,GAAIC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,EAAE;IAEtBZ,cAAc,EAAE;IAEhBO,eAAe,EAAE;IAEjB,IAAG,CAACf,kBAAkB,IAAI,CAACW,mBAAmB,EAAE;MAC5C;IACJ;IAGAU,OAAO,CAACC,GAAG,CAACxB,WAAW,CAAC;IACxBuB,OAAO,CAACC,GAAG,CAACZ,YAAY,CAAC;EAC9B,CAAC;EAED,MAAMa,gBAAgB,GAAGrB,iBAAiB,GACxC,sBAAsB,GACtB,cAAc;EAEhB,MAAMsB,iBAAiB,GAAGZ,kBAAkB,GAC1C,sBAAsB,GACtB,cAAc;EAEhB,oBAEE;IAAM,QAAQ,EAAEM,qBAAsB;IAAA,wBAEpC;MAAK,SAAS,EAAEK,gBAAiB;MAAA,wBAC/B;QAAO,OAAO,EAAC,MAAM;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAQ,eACvC;QACA,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,MAAM;QACT,QAAQ,EAAEnB,kBAAmB;QAC7B,MAAM,EAAEE,eAAgB;QACxB,KAAK,EAAER;MAAY;QAAA;QAAA;QAAA;MAAA,QACjB,EACDI,iBAAiB,iBAAI;QAAG,SAAS,EAAC,YAAY;QAAA,UAAC;MAAsB;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACtE,eAEN;MAAK,SAAS,EAAEsB,iBAAkB;MAAA,wBAChC;QAAO,OAAO,EAAC,OAAO;QAAA,UAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAQ,eACzC;QACA,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,OAAO;QACV,QAAQ,EAAEX,mBAAoB;QAC9B,MAAM,EAAEC,gBAAiB;QACzB,KAAK,EAAEJ;MAAa;QAAA;QAAA;QAAA;MAAA,QAClB,EACDE,kBAAkB,iBAAI;QAAG,SAAS,EAAC,YAAY;QAAA,UAAC;MAAuB;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACxE,eAEN;MAAK,SAAS,EAAC,cAAc;MAAA,uBAC3B;QAAQ,QAAQ,EAAE,CAACK,WAAY;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QAC3C;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAIT,CAAC;AAAC,GArFEtB,WAAW;EAAA,QASXD,QAAQ,EASRA,QAAQ;AAAA;AAAA,KAlBRC,WAAW;AAuFjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}