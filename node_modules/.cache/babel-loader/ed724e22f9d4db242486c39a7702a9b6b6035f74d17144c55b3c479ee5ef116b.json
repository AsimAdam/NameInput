{"ast":null,"code":"var _jsxFileName = \"/home/genox/Desktop/NameInput/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEntredNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInValid = !enteredNameIsValid && enteredNameTouched;\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const emailInputIsInvaid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  ;\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setEntredNameTouched(true);\n  };\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEntredNameTouched(true);\n    setEnteredEmailTouched(true);\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n    console.log(enteredName);\n    setEnteredName('');\n    setEnteredEmail('');\n    setEntredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n  const nameInputClasses = nameInputIsInValid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInvaid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), nameInputIsInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), emailInputIsInvaid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"t1pRFdoVsbBjz1kqeQrJm5JMSz0=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEntredNameTouched","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredNameIsValid","trim","nameInputIsInValid","enteredEmailIsValid","includes","emailInputIsInvaid","formIsValid","nameInputChangeHandler","event","target","value","nameInputBlurHandler","emailInputChangeHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses","emailInputClasses"],"sources":["/home/genox/Desktop/NameInput/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\n\n\nconst SimpleInput = (props) => {\n  \n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEntredNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched]  = useState(false);\n \n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInValid = !enteredNameIsValid && enteredNameTouched;\n\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const emailInputIsInvaid = !enteredEmailIsValid && enteredEmailTouched;\n  \n     \n  let formIsValid = false;\n\n    if(enteredNameIsValid && enteredEmailIsValid) {\n       formIsValid = true;\n    };\n\n  const nameInputChangeHandler = (event) => {\n       setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = (event) => {\n       setEntredNameTouched(true);\n    };\n\n  const emailInputChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const emailInputBlurHandler = (event) => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = (event) => {\n       event.preventDefault();\n\n       setEntredNameTouched(true);\n       setEnteredEmailTouched(true);\n\n       if(!enteredNameIsValid && !enteredEmailIsValid) {\n           return;\n       }\n\n\n       console.log(enteredName);\n       \n\n       setEnteredName('');\n       setEnteredEmail('');\n\n       setEntredNameTouched(false);\n       setEnteredEmailTouched(false)\n  };\n\n  const nameInputClasses = nameInputIsInValid \n  ? 'form-control invalid'\n  : 'form-control';\n\n  const emailInputClasses = emailInputIsInvaid\n  ? 'form-control invalid'\n  : 'form-control';\n\n  return (\n\n    <form onSubmit={formSubmissionHandler}>\n\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n        type='text' \n        id='name' \n        onChange={nameInputChangeHandler} \n        onBlur={nameInputBlurHandler}\n        value={enteredName}\n        />\n        {nameInputIsInValid && <p className=\"error-text\">Name must not be empty</p>}\n      </div>\n\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your email</label>\n        <input \n        type='text' \n        id='email' \n        onChange={emailInputChangeHandler} \n        onBlur={emailInputBlurHandler}\n        value={enteredEmail}\n        />\n        {emailInputIsInvaid && <p className=\"error-text\">Email must not be empty</p>}\n      </div>\n\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n\n\n  };\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAGjC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAE7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACK,kBAAkB,EAAEC,oBAAoB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAClE,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACS,mBAAmB,EAAEC,sBAAsB,CAAC,GAAIV,QAAQ,CAAC,KAAK,CAAC;EAEtE,MAAMW,kBAAkB,GAAGR,WAAW,CAACS,IAAI,EAAE,KAAK,EAAE;EACpD,MAAMC,kBAAkB,GAAG,CAACF,kBAAkB,IAAIN,kBAAkB;EAEpE,MAAMS,mBAAmB,GAAGP,YAAY,CAACQ,QAAQ,CAAC,GAAG,CAAC;EACtD,MAAMC,kBAAkB,GAAG,CAACF,mBAAmB,IAAIL,mBAAmB;EAGtE,IAAIQ,WAAW,GAAG,KAAK;EAErB,IAAGN,kBAAkB,IAAIG,mBAAmB,EAAE;IAC3CG,WAAW,GAAG,IAAI;EACrB;EAAC;EAEH,MAAMC,sBAAsB,GAAIC,KAAK,IAAK;IACrCf,cAAc,CAACe,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;EAED,MAAMC,oBAAoB,GAAIH,KAAK,IAAK;IACnCb,oBAAoB,CAAC,IAAI,CAAC;EAC7B,CAAC;EAEH,MAAMiB,uBAAuB,GAAIJ,KAAK,IAAK;IACzCX,eAAe,CAACW,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMG,qBAAqB,GAAIL,KAAK,IAAK;IACvCT,sBAAsB,CAAC,IAAI,CAAC;EAC9B,CAAC;EAED,MAAMe,qBAAqB,GAAIN,KAAK,IAAK;IACpCA,KAAK,CAACO,cAAc,EAAE;IAEtBpB,oBAAoB,CAAC,IAAI,CAAC;IAC1BI,sBAAsB,CAAC,IAAI,CAAC;IAE5B,IAAG,CAACC,kBAAkB,IAAI,CAACG,mBAAmB,EAAE;MAC5C;IACJ;IAGAa,OAAO,CAACC,GAAG,CAACzB,WAAW,CAAC;IAGxBC,cAAc,CAAC,EAAE,CAAC;IAClBI,eAAe,CAAC,EAAE,CAAC;IAEnBF,oBAAoB,CAAC,KAAK,CAAC;IAC3BI,sBAAsB,CAAC,KAAK,CAAC;EAClC,CAAC;EAED,MAAMmB,gBAAgB,GAAGhB,kBAAkB,GACzC,sBAAsB,GACtB,cAAc;EAEhB,MAAMiB,iBAAiB,GAAGd,kBAAkB,GAC1C,sBAAsB,GACtB,cAAc;EAEhB,oBAEE;IAAM,QAAQ,EAAES,qBAAsB;IAAA,wBAEpC;MAAK,SAAS,EAAEI,gBAAiB;MAAA,wBAC/B;QAAO,OAAO,EAAC,MAAM;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAQ,eACvC;QACA,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,MAAM;QACT,QAAQ,EAAEX,sBAAuB;QACjC,MAAM,EAAEI,oBAAqB;QAC7B,KAAK,EAAEnB;MAAY;QAAA;QAAA;QAAA;MAAA,QACjB,EACDU,kBAAkB,iBAAI;QAAG,SAAS,EAAC,YAAY;QAAA,UAAC;MAAsB;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACvE,eAEN;MAAK,SAAS,EAAEiB,iBAAkB;MAAA,wBAChC;QAAO,OAAO,EAAC,OAAO;QAAA,UAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAQ,eACzC;QACA,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,OAAO;QACV,QAAQ,EAAEP,uBAAwB;QAClC,MAAM,EAAEC,qBAAsB;QAC9B,KAAK,EAAEjB;MAAa;QAAA;QAAA;QAAA;MAAA,QAClB,EACDS,kBAAkB,iBAAI;QAAG,SAAS,EAAC,YAAY;QAAA,UAAC;MAAuB;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACxE,eAEN;MAAK,SAAS,EAAC,cAAc;MAAA,uBAC3B;QAAQ,QAAQ,EAAE,CAACC,WAAY;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QAC3C;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAIT,CAAC;AAAC,GApGEhB,WAAW;AAAA,KAAXA,WAAW;AAsGjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}