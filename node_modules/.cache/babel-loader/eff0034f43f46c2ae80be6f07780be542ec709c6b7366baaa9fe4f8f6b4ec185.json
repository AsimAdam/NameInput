{"ast":null,"code":"var _jsxFileName = \"/home/genox/Desktop/NameInput/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEntredNameTouched] = useState(false);\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log('Name input is valid');\n    }\n  }, [enteredNameIsValid]);\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEntredNameTouched(true);\n    if (enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n    ;\n    setEnteredNameIsValid(true);\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n    setEnteredName('');\n  };\n  const nameInputIsInValid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = nameInputIsInValid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), nameInputIsInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"BwD/WHNoezNtuKVgcGLhbDzCUCA=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useRef","useState","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","enteredNameTouched","setEntredNameTouched","console","log","nameInputChangeHandler","event","target","value","formSubmissionHandler","preventDefault","trim","enteredValue","current","nameInputIsInValid","nameInputClasses"],"sources":["/home/genox/Desktop/NameInput/src/components/SimpleInput.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\n\nconst SimpleInput = (props) => {\n\n  const nameInputRef = useRef();\n  \n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEntredNameTouched] = useState(false);\n\n  useEffect(() => {\n     \n      if(enteredNameIsValid) {\n        console.log('Name input is valid');\n      }\n     \n  }, [enteredNameIsValid]);\n  \n\n  const nameInputChangeHandler = (event) => {\n       setEnteredName(event.target.value);\n  };\n\n  const formSubmissionHandler = (event) => {\n       event.preventDefault();\n\n       setEntredNameTouched(true);\n              \n       if(enteredName.trim() === '') {\n           setEnteredNameIsValid(false);\n           return;\n       };\n\n       setEnteredNameIsValid(true);\n\n       console.log(enteredName);\n       \n\n       const enteredValue = nameInputRef.current.value;\n\n       console.log(enteredValue);\n\n       setEnteredName('');\n  };\n\n  const nameInputIsInValid = !enteredNameIsValid && enteredNameTouched;\n\n  const nameInputClasses = nameInputIsInValid ? 'form-control invalid' : 'form-control';\n\n  return (\n\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n        ref={nameInputRef} \n        type='text' \n        id='name' \n        onChange={nameInputChangeHandler} \n        value={enteredName}\n        />\n        {nameInputIsInValid && <p className=\"error-text\">Name must not be empty</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAGpD,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAE7B,MAAMC,YAAY,GAAGJ,MAAM,EAAE;EAE7B,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACM,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACQ,kBAAkB,EAAEC,oBAAoB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAElEF,SAAS,CAAC,MAAM;IAEZ,IAAGQ,kBAAkB,EAAE;MACrBI,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC;EAEJ,CAAC,EAAE,CAACL,kBAAkB,CAAC,CAAC;EAGxB,MAAMM,sBAAsB,GAAIC,KAAK,IAAK;IACrCR,cAAc,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;EAED,MAAMC,qBAAqB,GAAIH,KAAK,IAAK;IACpCA,KAAK,CAACI,cAAc,EAAE;IAEtBR,oBAAoB,CAAC,IAAI,CAAC;IAE1B,IAAGL,WAAW,CAACc,IAAI,EAAE,KAAK,EAAE,EAAE;MAC1BX,qBAAqB,CAAC,KAAK,CAAC;MAC5B;IACJ;IAAC;IAEDA,qBAAqB,CAAC,IAAI,CAAC;IAE3BG,OAAO,CAACC,GAAG,CAACP,WAAW,CAAC;IAGxB,MAAMe,YAAY,GAAGhB,YAAY,CAACiB,OAAO,CAACL,KAAK;IAE/CL,OAAO,CAACC,GAAG,CAACQ,YAAY,CAAC;IAEzBd,cAAc,CAAC,EAAE,CAAC;EACvB,CAAC;EAED,MAAMgB,kBAAkB,GAAG,CAACf,kBAAkB,IAAIE,kBAAkB;EAEpE,MAAMc,gBAAgB,GAAGD,kBAAkB,GAAG,sBAAsB,GAAG,cAAc;EAErF,oBAEE;IAAM,QAAQ,EAAEL,qBAAsB;IAAA,wBACpC;MAAK,SAAS,EAAEM,gBAAiB;MAAA,wBAC/B;QAAO,OAAO,EAAC,MAAM;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAQ,eACvC;QACA,GAAG,EAAEnB,YAAa;QAClB,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,MAAM;QACT,QAAQ,EAAES,sBAAuB;QACjC,KAAK,EAAER;MAAY;QAAA;QAAA;QAAA;MAAA,QACjB,EACDiB,kBAAkB,iBAAI;QAAG,SAAS,EAAC,YAAY;QAAA,UAAC;MAAsB;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACvE,eACN;MAAK,SAAS,EAAC,cAAc;MAAA,uBAC3B;QAAA,UAAQ;MAAM;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACnB;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX,CAAC;AAAC,GAlEIpB,WAAW;AAAA,KAAXA,WAAW;AAoEjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}